@use '../util/media';

$displays: ('block', 'flex', 'inline-block', 'none');
@each $display in $displays {
    $display-value: unquote($display);
    .d-#{$display-value} {
        display: $display-value !important;
    }
}

$properties: (
    'ai': (
        center, flex-end, flex-start, baseline, stretch
    ),
    'as': (
        auto, flex-start, center, baseline, flex-start
    )
) ;

@each $property, $data-property in $properties {
    $real-property-name: '';
    @if ($property == 'ai') { $real-property-name: 'align-items';}
    @if ($property == 'as') { $real-property-name: 'align-self';}
    @each $value in $data-property {
        .#{$property}-#{$value} {
            #{$real-property-name}: $value !important;
        }
    } 
}

$j-properties: (
    'jc': (
        center, end, start, baseline, stretch, between, around
    )
) ;

@each $property, $data-property in $j-properties {
    $real-property-name: '';
    @each $value in $data-property {
        $name: '';
        @if ($property == 'jc') { $real-property-name: 'justify-content';}
        @if ($value == end) { $name: flex-end;}
        @if ($value == start) { $name: flex-start;}
        @if ($value == between) { $name: space-between;}
        @if ($value == around) { $name: space-around;}
        @if ($value == center) { $name: center;}
        @if ($value == baseline) { $name: baseline;}
        @if ($value == stretch) { $name: stretch;}
        .#{$property}-#{$value} {
            #{$real-property-name}: $name !important;
        }
    } 
}

$direction: (row, row-reverse, column, column-reverse);
@each $dir in $direction {
    .flex-#{$dir} {
        -webkit-box-orient: vertical !important;
        -webkit-box-direction: normal !important;
        -webkit-flex-direction: $dir !important;
                flex-direction: $dir !important;
    }
}

$wraps: (nowrap, wrap, wrap-reverse);
@each $wrap in $wraps {
    .flex-#{$wrap} {
        -webkit-flex-wrap: $wrap !important;
                flex-wrap: $wrap !important;
    }
}


@each $key, $value in media.$breakpoints {
    @media (min-width: $value) {
        @each $display in $displays {
            $display-value: unquote($display);
            .d-#{$key}-#{$display-value} {
                display: $display-value !important;
            }
        }  
        @each $property, $data-property in $properties {
            $real-property-name: '';
            @if ($property == 'ai') { $real-property-name: 'align-items';}
            @if ($property == 'as') { $real-property-name: 'align-self';}
            @each $value in $data-property {
                .#{$property}-#{$key}-#{$value} {
                    #{$real-property-name}: $value !important;
                }
            } 
        }
        @each $property, $data-property in $j-properties {
            $real-property-name: '';
            @each $value in $data-property {
                $name: '';
                @if ($property == 'jc') { $real-property-name: 'justify-content';}
                @if ($value == end) { $name: flex-end;}
                @if ($value == start) { $name: flex-start;}
                @if ($value == between) { $name: space-between;}
                @if ($value == around) { $name: space-around;}
                @if ($value == center) { $name: center;}
                @if ($value == baseline) { $name: baseline;}
                @if ($value == stretch) { $name: stretch;}
                .#{$property}-#{$key}-#{$value} {
                    #{$real-property-name}: $name !important;
                }
            } 
        } 
        @each $dir in $direction {
            .flex-#{$key}-#{$dir} {
                -webkit-box-orient: vertical !important;
                -webkit-box-direction: normal !important;
                -webkit-flex-direction: $dir !important;
                        flex-direction: $dir !important;
            }
        }   
        @each $wrap in $wraps {
            .flex-#{$key}-#{$wrap} {
                -webkit-flex-wrap: $wrap !important;
                        flex-wrap: $wrap !important;
            }
        }  
    }
}